name: Build/release

on:
  push:
    tags:
      - 'v*'


jobs:
  artifact_linux:
    name: Upload Artifact (Linux)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Install Node v12
        uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://npm.pkg.github.com
          scope: "@aye-player"

      - name: Add authToken to npmrc
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.PACKAGE_TOKEN }}" > ~/.npmrc
          echo "_authToken=${{ secrets.PACKAGE_TOKEN }}" > ~/.npmrc

      - name: Install dependencies
        run: yarn install

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Send Discord Notification
        uses: sarisia/actions-status-discord@v1
        if: success()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          title: "release linux"
          description: "New AYE-Player Release"
          nofail: false
          nodetail: false
          color: 0x0000ff
          username: GitHub Actions
          avatar_url: ${{ secrets.AVATAR_URL }}

  artifact_macos:
    name: Upload Artifact (macOS)
    runs-on: macOS-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Install Node v12
        uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://npm.pkg.github.com
          scope: "@aye-player"

      - name: Add authToken to npmrc
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.PACKAGE_TOKEN }}" > ~/.npmrc
          echo "_authToken=${{ secrets.PACKAGE_TOKEN }}" > ~/.npmrc

      - name: Install dependencies
        run: yarn install

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Send Discord Notification
        uses: sarisia/actions-status-discord@v1
        if: success()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          title: "release linux"
          description: "New AYE-Player Release"
          nofail: false
          nodetail: false
          color: 0x0000ff
          username: GitHub Actions
          avatar_url: ${{ secrets.AVATAR_URL }}


  artifact_windows:
    name: Upload Artifact (Windows)
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: install node v12
        uses: actions/setup-node@v1
        with:
          always-auth: true
          node-version: 12
          registry-url: https://npm.pkg.github.com
          scope: "@aye-player"

      - name: Add authToken to npmrc
        run: |
          Add-Content -Path .\.npmrc -Value '//npm.pkg.github.com/:_authToken=${{ secrets.PACKAGE_TOKEN }}'
          Add-Content -Path .\.npmrc -Value  '_authToken=${{ secrets.PACKAGE_TOKEN }}'

      - name: Install dependencies
        run: yarn install

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Send Discord Notification
        uses: sarisia/actions-status-discord@v1
        if: success()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          title: "release linux"
          description: "New AYE-Player Release"
          nofail: false
          nodetail: false
          color: 0x0000ff
          username: GitHub Actions
          avatar_url: ${{ secrets.AVATAR_URL }}
