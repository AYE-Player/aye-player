name: Build/release

on:
  push:
    tags:
      - "v*"

jobs:
  build_and_release_artifacts:
    name: Build and Upload
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node v20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Add authToken to linux os
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.PACKAGE_TOKEN }}" > ~/.npmrc
          echo "_authToken=${{ secrets.PACKAGE_TOKEN }}" > ~/.npmrc
        if: matrix.os == 'ubuntu-latest'

      - name: Add authToken to macOS
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.PACKAGE_TOKEN }}" > ~/.npmrc
          echo "_authToken=${{ secrets.PACKAGE_TOKEN }}" > ~/.npmrc
        if: matrix.os == 'macos-latest'

      - name: Add authToken to windows
        run: |
          Add-Content -Path .\.npmrc -Value '//npm.pkg.github.com/:_authToken=${{ secrets.PACKAGE_TOKEN }}'
          Add-Content -Path .\.npmrc -Value  '_authToken=${{ secrets.PACKAGE_TOKEN }}'
        if: matrix.os == 'windows-latest'

      - name: Build/release Electron app
        uses: aye-player/action-electron-builder@master
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
