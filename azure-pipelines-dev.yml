strategy:
  matrix:
    linux:
      imageName: 'ubuntu-latest'
    mac:
      imageName: 'macos-latest'
    windows:
      imageName: 'windows-latest'

pool:
  vmImage: $(imageName)

trigger:
  - develop

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '12.x'
    displayName: 'Install Node.js'

  - task: Yarn@3
    inputs:
      customRegistry: 'useFeed'
      customFeed: '349a4029-ad48-4139-829a-350c5fbdced8'
      arguments: '--frozen-lockfile'

  - script: |
      yarn package
    displayName: 'Package'

  - task: DeleteFiles@1
    condition: eq(variables['imageName'], 'ubuntu-latest')
    inputs:
      SourceFolder: './release'
      Contents: |
        linux-unpacked
    displayName: 'Deleting unneeded linux files'

  - task: DeleteFiles@1
    condition: eq(variables['imageName'], 'macos-latest')
    inputs:
      SourceFolder: './release'
      Contents: |
        mac
        *.zip
        ._aye-player-*.dmg
        *.blockmap
    displayName: 'Deleting unneeded mac files'

  - task: DeleteFiles@1
    condition: eq(variables['imageName'], 'windows-latest')
    inputs:
      SourceFolder: './release'
      Contents: |
        win-unpacked
        *.exe.blockmap
    displayName: 'Deleting unneeded windows files'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: './release'
      includeRootFolder: false
      archiveType: 'tar'
      archiveFile: '$(Build.ArtifactStagingDirectory)/AYE_Player_$(imageName).tar.gz'
      replaceExistingArchive: true
    displayName: 'Create Archive'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/AYE_Player_$(imageName).tar.gz'
      ArtifactName: 'aye_player_build'
      publishLocation: 'Container'
    displayName: 'Publish to Artifact Storage'
